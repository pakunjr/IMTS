<?php

class controller_documents {

    private $model;
    private $view;

    private $mPDF;

    public function __construct ($model=null) {
        $this->model = $model != null ? $model : new model_documents();
        $this->view = new view_documents();

        error_reporting(0);

        /**
         * Get the mPDF plugin to generate
         * documents and other printable
         * media
         */
        ob_start();
        if (!class_exists('mPDF')) {
            $file = DIR_PLUGINS.DS.'mPDF'.DS.'mpdf.php';
            if (file_exists($file)) {
                require_once($file);
                $this->mPDF = new mPDF('c', 'A4', 7, 'Helvetica', 15, 15, 16, 16, 9, 9, 'P');
            } else
                exit('<span style="display: inline-block; color: #f00;">PLUGIN ERROR: mPDF is missing, system cannot generate the document.
                    <br />Exiting...
                    <br /><br /><a href="'.URL_BASE.'">Click here to go to <input type="button" value="Homepage" /></a>
                    </span>');
        } else
            $this->mPDF = new mPDF('c', 'A4', 7, 'Helvetica', 15, 15, 16, 16, 9, 9, 'P');

        $this->mPDF->SetDisplayMode('fullpage');
        $this->mPDF->useSubstitutions = false;
        $this->mPDF->simpleTables = true;
        ob_end_clean();
    }



    public function __destruct () {

    }



    public function generateInventoryReport ($ownerType, $ownerId) {
        /**
         * Generate a printable lists
         * of the items owned by a
         * specific owner, either a
         * person or a department
         */
        $fx = new myFunctions();
        $c_pages = new controller_pages();
        $c_owners = new controller_owners();
        $c_departments = new controller_departments();

        $headedBy = strtolower($ownerType) == 'department'
            ? ' headed by '.$c_departments->displayDepartmentHeadName($ownerId, false)
            : '';

        $stylesheet = $this->view->pdfStylesheet();
        $datas = $this->model->ownerInventory($ownerType, $ownerId);

        if ($datas == null) {
            $c_pages->displayPageError('custom', '<span style="display: inline-block; color: #f00;">
                Cannot generate an Inventory Report for this person or department.<br />
                No item/s is/are owned by this owner.
                </span>');
            exit();
        }

        $statisticContents = $this->view->renderInventoryStatistics($datas);
        $inventoryContents = $this->view->renderInventoryReport($datas);
        $this->mPDF->SetHTMLHeader('<div id="pdf-header">
            INVENTORY REPORT of '.SYSTEM_NAME.' '.SYSTEM_VERSION.' &copy; '.SYSTEM_YEAR_START.' - '.date('Y').'
            <div class="hr"></div>
            </div>');
        $docGenerator = isset($_SESSION['user']) ? $_SESSION['user']['name'] : 'Anonymous';
        $this->mPDF->SetHTMLFooter('<div id="pdf-footer">
            <div class="hr"></div>
            Generated by '.$docGenerator.' as of '.$fx->dateToWords(date('Y-m-d')).' @ '.date('H:i:s').' (UTC+08:00)<br />
            Page {PAGENO} of {nbpg}, items owned by '.$c_owners->displayOwnerName($datas['ownership_id'], false).$headedBy.'<br />
            </div>');
        $this->mPDF->WriteHTML($stylesheet, 1);
        $this->mPDF->WriteHTML($statisticContents);
        $this->mPDF->WriteHTML($inventoryContents);
        $this->mPDF->Output();
        exit();
    }



    public function generateProfileCard ($itemId) {
        /**
         * Generate a profile card that is
         * to be taped or embedded to the
         * item (Computer with components mostly)
         */
        $stylesheet = $this->view->pdfStylesheet();
        $datas = $this->model->profileCard($itemId);
        $pdfContents = $this->view->renderProfileCard($datas);
        $this->mPDF->WriteHTML($stylesheet, 1);
        $this->mPDF->WriteHTML($pdfContents);
        $this->mPDF->Output('Profile Card of '.$datas['item_name'].'.pdf', 'I');
        exit();
    }



    public function generateItemTrace ($itemId) {
        /**
         * Generate ownership history
         * of a specific item and the
         * maintenance/s that has been
         * done to it
         */
        $this->mPDF->SetHTMLHeader(SYSTEM_NAME.' '.SYSTEM_VERSION.'
            <div class="hr"></div>');
        $this->mPDF->SetHTMLFooter('<div class="hr"></div>
            Item Trace for ');
        $this->mPDF->WriteHTML('Item Trace');
        $this->mPDF->Output();
        exit();
    }

}
